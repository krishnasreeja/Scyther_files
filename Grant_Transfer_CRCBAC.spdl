hashfunction H;/* Secure hash function */
const XOR:Function;/* XOR operation */
const Concat: Function;/*Concatenation Function */
const Union:Function; /* Union Function*/
const OR:Function;
const Fresh: Function;
const Getchild:Function;
const Getdepth:Function;
const Getrole:Function;
const GetCapabilities:Function;
const GetPermission:Function;
const cxtn,cxtt,IDa,IDb,c'; 
secret SKn,SKt,resp;
protocol GrantTransfer (RoleA,RoleB, RoleC  )
{
	macro Ea=XOR(Concat(IDa,resp),H(SKn));
	macro Eb=XOR(Concat(IDb,resp),H(SKt));
	macro R1=Getchild(Rg1);
	macro RG2depth=Getdepth(RG1);
	macro CR1'=Union(CR1,(R1,c'));
	macro CRG1'=Sub(CRG1,(rg1,c'));
	macro CRG2'=Union(CRG2,(rg2,c'));
	
    role RoleA  {
        fresh T1:Nonce;      var T4:Nonce;
       	macro Mb = XOR(Concat(IDb,c',cxtn),H(SKt));
        send_1 (RoleA,RoleB,Mb);
	recv_4(RoleB,RoleA,XOR(Concat(IDb,resp),H(SKt)),T4);
        claim(RoleA,Alive);claim(RoleA,Nisynch);
        claim(RoleA,Weakagree);claim(RoleA,Niagree);
        claim(RoleA,Commit,RoleB,resp);
        claim(RoleA,Secret,SKn); }
    role RoleB   {    
        fresh T2,T4 :Nonce;     var T1, T3: Nonce;
        recv_1(RoleA,RoleB,Mb);
	macro Ma=XOR(Concat(IDa,cxtt,T2),H(SKn));
        send_2 (RoleB, RoleC  ,Ma,Mb);
        recv_3( RoleC  ,RoleB,Ea,Eb,T3);
	macro Respa=XOR(Ea,H(SKn));
	send_4(RoleB,RoleA,Eb,T4);
	claim(RoleB,Alive);
        claim(RoleB,Weakagree);
        claim(RoleB,Niagree);
        claim(RoleB,Nisynch);
	claim(RoleB,Commit, RoleC  ,resp);
        claim(RoleB,Secret,SKt);   }
   role RoleC  {
        fresh T3:Nonce;
        var T2:Nonce;var Ma,Mb,Pri;
        recv_2 (RoleB, RoleC  ,Ma,Mb);
	macro Ma'=XOR(Ma,H(SKn));
	match(XOR(Ma',H(SKn)),Ma);
	macro Mb'=XOR(Mb,H(SKt));
	match(XOR(Mb',H(SKt)),Mb);

macro R1 = Getrole((IDa,cxtn),(IDb,cxtt));
macro RG1= Getrole(IDb,cxtt);
macro  RG1=isparent(R1);
macro cap=GetCapabilities(RG1);
macro Per=GetPermission(cap);
macro GetPermission= allow(cap);
macro Grantresp = Concat( Grant(RG1,R1,c'),CR1');
macro Transferresp=Concat( Transfer(RG1,RG2,c'),CRG1');
macro resp =Concat(OR(Grantresp,Transferressp));
send_3( RoleC ,RoleB,Ea,Eb,T3);

	claim( RoleC  ,Alive);  claim( RoleC  ,Niagree);
        claim( RoleC  ,Weakagree);claim( RoleC  ,Secret,SKt);
       claim( RoleC  ,Nisynch);claim( RoleC  ,Secret,SKn);    }  
}
